<launch>
  <!-- 
    Summary
    - launches the robot state publisher
    - serves map
    - launches the adaptive monte carlo localization algorithm (amcl)
    - launches the move base algorithm
    - rviz 
   -->

  <!-- Arguments -->

  <!-- initial pose -->
  <arg name="initial_pose_x" default="-4.815"/>
  <arg name="initial_pose_y" default="1.486"/>
  <arg name="initial_pose_a" default="0.0"/>
  <!-- the path of the map file -->
  <arg name="map_file" default="$(find sim2)/maps/house.yaml"/>

  <!-- rviz gui flag -->
  <arg name="open_rviz" default="false"/>

  <!-- ? -->
  <arg name="move_forward_only" default="false"/>

  <!-- lanch the robot state publisher -->
  <!-- Turtlebot3 -->
  <include file="$(find sim2)/launch/remote.launch">
  </include>

  <!-- make a map server to deliver the map -->
  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- launches the adaptive monte carlo localization algorithm -->
  <!-- AMCL -->
  <include file="$(find sim2)/launch/amcl.launch">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  <!-- <rostopic name="initialize_map_location" command="" -->

  <!-- launche move base -->
  <!-- move_base -->
  <include file="$(find sim2)/launch/move_base.launch">
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>


  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find sim2)/rviz/amcl.rviz"/>
  </group>


  <node pkg="sim2" type="initial_map_pose.py" name="initial_map_pose" output="screen"></node>
  <node pkg="sim2" type="mode_publisher.py" name="mode_publisher" output="screen"></node>
  <node pkg="sim2" type="battery.py" name="battery" output="screen"></node>
  <node pkg="sim2" type="goal_scrapper.py" name="goal_scrapper" output="screen"></node>  
  <node pkg="sim2" type="go_home.py" name="go_home" output="screen"></node>  
  <node pkg="sim2" type="stop.py" name="stop" output="screen"></node>  
  
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
  </node>

  <!-- <node pkg="sim2" type="raspi_cam_comp.py" name="raspi_cam_comp" output="screen"></node> -->
  <!-- <node pkg="sim2" type="threaded_face_detection_and_recognition.py" name="threaded_face_detection_and_recognition" output="screen"></node> -->
  <node pkg="sim2" type="simple_goal_handler.py" name="simple_goal_handler" output="screen"></node>
  
</launch>
